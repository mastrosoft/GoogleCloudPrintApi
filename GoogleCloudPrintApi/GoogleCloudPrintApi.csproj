<Project Sdk="Microsoft.NET.Sdk" ToolsVersion="15.0">
  <PropertyGroup>
    <Description>A .NET wrapper for Google Cloud Print API, based on .NET standard 1.4</Description>
    <Copyright>Copyright (c) 2016-* Karl Wan</Copyright>
    <AssemblyTitle>GoogleCloudPrintApi</AssemblyTitle>
    <VersionPrefix>1.5.0</VersionPrefix>
    <Authors>Karl Wan</Authors>
    <TargetFrameworks>netstandard1.4;net46</TargetFrameworks>
    <AssemblyName>GoogleCloudPrintApi</AssemblyName>
    <PackageId>GoogleCloudPrintApi</PackageId>
    <PackageTags>Google;Cloud;Print;API</PackageTags>
    <PackageReleaseNotes>
[01/09/2017] Added list jobs and delete jobs (Thanks to @sebthieti)
[15/07/2017] Minor update on "Save To Google Drive" printer (Thanks to @whttigress)
[04/07/2017] Added helper class to help cdd capabilities creation for printer registration
[02/06/2017] Added job submission and printer search (Thanks to @elacy for the implementation), Net452 package is no longer maintained
[22/02/2017] Added xmpp client for new job notification (Thanks to @Jezternz for the code)
[19/01/2017] Fixed missing refresh token when updating the access token (Thanks to @Jezternz for bug-fixing)
[23/12/2016] Added GetCloudJobTicketAsync for getting user settings for CDD print jobs
[23/11/2016] Expose access token for external web call.
[9/11/2016] Expose exception information from Google if the request fails.
[4/11/2016] Added redirect uri for authorization
[3/11/2016] Added CancellationToken for cancelling request.
[3/11/2016] Added ConfigureAwait(false) to prevent deadlocks</PackageReleaseNotes>
    <PackageProjectUrl>https://github.com/lppkarl/GoogleCloudPrintApi</PackageProjectUrl>
    <PackageLicenseUrl>https://github.com/lppkarl/GoogleCloudPrintApi/blob/master/LICENSE</PackageLicenseUrl>
    <GenerateAssemblyTitleAttribute>false</GenerateAssemblyTitleAttribute>
    <GenerateAssemblyDescriptionAttribute>false</GenerateAssemblyDescriptionAttribute>
    <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>
    <GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>
    <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>
    <GenerateAssemblyCopyrightAttribute>false</GenerateAssemblyCopyrightAttribute>
    <GenerateNeutralResourcesLanguageAttribute>false</GenerateNeutralResourcesLanguageAttribute>
    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>
    <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>
  <ItemGroup>
    <!--<Compile Include="**\*.cs" />-->
    <EmbeddedResource Include="**\*.resx" Exclude="@(EmbeddedResource)" />
    <EmbeddedResource Include="compiler\resources\**\*" Exclude="@(EmbeddedResource)" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Flurl" Version="2.6.0" />
    <PackageReference Include="Flurl.Http" Version="2.1.1">
    </PackageReference>
    <PackageReference Include="microsoft.csharp" Version="4.4.1" />
    <PackageReference Include="Microsoft.NETCore.Portable.Compatibility" Version="1.0.1">
    </PackageReference>
    <PackageReference Include="System.Net.Security" Version="4.3.2" />
    <PackageReference Include="System.Net.Sockets" Version="4.3.0" />
    <PackageReference Include="System.Xml.XmlDocument" Version="4.3.0" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="Infrastructures\UnderscoreSeparatedPropertyNamesContractResolver.cs" />
  </ItemGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants>$(DefineConstants);RELEASE</DefineConstants>
  </PropertyGroup>
</Project>